# Generated by Django 2.2.4 on 2020-01-30 02:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Puzzle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('codename', models.CharField(blank=True, help_text="A non-spoilery name if you're concerned about the name being a spoiler. Optional.", max_length=500)),
                ('needed_discussion_editors', models.IntegerField(default=2)),
                ('status', models.CharField(choices=[('II', 'Initial Idea'), ('ID', 'Idea in Development'), ('IA', 'Idea in Development (Answer Assigned)'), ('AA', 'Awaiting Answer'), ('W', 'Writing (Answer Assigned)'), ('WF', 'Writing (Answer Flexible)'), ('AT', 'Awaiting Approval for Testsolving'), ('T', 'Testsolving'), ('R', 'Revising'), ('NS', 'Needs Solution'), ('NP', 'Needs Post Production'), ('NF', 'Needs Factcheck'), ('D', 'Done'), ('DF', 'Deferred'), ('X', 'Dead')], default='II', max_length=2)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('summary', models.TextField(blank=True, help_text="A non-spoilery description. Try to describe your puzzle in a way that potential testsolvers can guess if they'll enjoy your puzzle without being spoiled. Useful to mention: how long or difficult you expect the puzzle to be, whether this is more suitable for one solver or many solvers, etc.")),
                ('description', models.TextField(help_text='A spoilery description of how the puzzle works.')),
                ('notes', models.TextField(blank=True)),
                ('editor_notes', models.TextField(blank=True)),
                ('priority', models.IntegerField(choices=[(1, 'Very High'), (2, 'High'), (3, 'Medium'), (4, 'Low'), (5, 'Very Low')], default=3)),
                ('content', models.TextField(blank=True, help_text='The puzzle itself. An external link is fine.')),
                ('solution', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(blank=True, max_length=500)),
                ('discord_username', models.CharField(blank=True, help_text='Your Discord username and tag (e.g. example#1234)', max_length=500)),
                ('bio', models.TextField(blank=True, help_text='Tell us about yourself. What kinds of puzzle genres or subject matter do you like?')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TestsolveSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started', models.DateTimeField(auto_now_add=True)),
                ('joinable', models.BooleanField(default=False, help_text='Whether this puzzle is advertised to other users as a session they can join.')),
                ('puzzle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='testsolve_sessions', to='puzzle_editing.Puzzle')),
            ],
        ),
        migrations.CreateModel(
            name='TestsolveParticipation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started', models.DateTimeField(auto_now_add=True)),
                ('ended', models.DateTimeField(blank=True, null=True)),
                ('fun_rating', models.IntegerField(blank=True, null=True)),
                ('difficulty_rating', models.IntegerField(blank=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='participations', to='puzzle_editing.TestsolveSession')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='testsolve_participations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TestsolveGuess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guess', models.TextField(blank=True, max_length=500)),
                ('correct', models.BooleanField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='guesses', to='puzzle_editing.TestsolveSession')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='guesses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'testsolve guesses',
            },
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True)),
                ('spoiled', models.ManyToManyField(blank=True, help_text="Users spoiled on the round's answers.", related_name='spoiled_rounds', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PuzzleComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('is_system', models.BooleanField()),
                ('content', models.TextField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comments', to=settings.AUTH_USER_MODEL)),
                ('puzzle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comments', to='puzzle_editing.Puzzle')),
                ('testsolve_session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='comments', to='puzzle_editing.TestsolveSession')),
            ],
        ),
        migrations.CreateModel(
            name='PuzzleAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(blank=True, max_length=500)),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='answers', to='puzzle_editing.Round')),
            ],
        ),
        migrations.AddField(
            model_name='puzzle',
            name='answers',
            field=models.ManyToManyField(blank=True, related_name='puzzles', to='puzzle_editing.PuzzleAnswer'),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='authors',
            field=models.ManyToManyField(blank=True, related_name='authored_puzzles', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='discussion_editors',
            field=models.ManyToManyField(blank=True, related_name='discussing_puzzles', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='factcheckers',
            field=models.ManyToManyField(blank=True, related_name='factchecking_puzzles', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='postprodders',
            field=models.ManyToManyField(blank=True, related_name='postprodding_puzzles', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='spoiled',
            field=models.ManyToManyField(blank=True, help_text='Users spoiled on the puzzle.', related_name='spoiled_puzzles', to=settings.AUTH_USER_MODEL),
        ),
    ]
